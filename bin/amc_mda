#!/usr/bin/env python3
# vim: sw=4:ts=4:et:cc=120

# this should run pretty quick and not rely on too much

import datetime
import io
import os, os.path
import sys
import uuid
import shutil
import syslog

args = None
base_dir = None
data_dir = None
subdir_format = None

def mda():
    """Accepts an email on standard input and places into storage for transfer by the mta() function."""

    # just use a random uuid to store the email on the filesystem
    _id = str(uuid.uuid4())
    _dir = os.path.join(data_dir, datetime.datetime.now().strftime(subdir_format))
    _path = os.path.join(_dir, _id)
    _new_path = '{}.new'.format(_path)

    if not os.path.isdir(_dir):
        try:
            os.mkdir(_dir)
        except Exception as e:
            syslog.syslog(syslog.LOG_ERR, "unable to create directory {}: {}".format(_dir, e))
            sys.exit(1)

    try:
        with open(_new_path, 'wb') as fp:
            shutil.copyfileobj(sys.stdin.buffer, fp)
        
        os.rename(_new_path, _path)
        syslog.syslog(syslog.LOG_INFO, "stored email {}".format(_path))

    except Exception as e:
        syslog.syslog(syslog.LOG_ERR, "failed to save email: {}".format(e))
        sys.exit(1)

if __name__ == '__main__':

    import argparse

    parser = argparse.ArgumentParser(description="ACE Mailbox Client")
    parser.add_argument('--base-dir', required=False, dest='base_dir', default='/opt/ace',
        help="Base directory for amc (defaults to /opt/ace)")
    parser.add_argument('--data-dir', required=False, dest='data_dir', default='data/var/incoming/amc',
        help="Relative directory where emails are locally stored for transport. "
             "Overrides value specified in configuration file.")
    parser.add_argument('--subdir-format', required=False, dest='subdir_format', default='%Y%m%d%H',
        help="The strptime format to use to name the subdirectories that contain the emails.")

    args = parser.parse_args()

    if args.base_dir:
        base_dir = args.base_dir

    if args.data_dir:
        data_dir = args.data_dir

    if args.subdir_format:
        subdir_format = args.subdir_format

    # initialize syslog logging
    syslog.openlog('amc_mda')

    try:
        os.chdir(base_dir)
    except Exception as e:
        syslog.syslog(syslog.LOG_ERR, "unable to cd into {}: {}".format(base_dir, e))
        sys.exit(1)

    mda()
    sys.exit(0)
